package com.zalexdev.stryker.custom;

import org.json.JSONObject;

import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Exploit {
    public String path;
    public String lang;
    public String title;
    public String successpatern;
    public String args;
    public String ip = "";
    public String port = "";
    public String gw = "";
    public String mask = "";
    public String mac = "";
    public Boolean issystem = false;
    public String getPath() {
        return path;
    }

    public void setPath(String path) {
        this.path = path;
        if (path.contains(".py")){
            setLang("Python");
        }else{
            setLang("Other");
        }
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getLang() {
        return lang;
    }

    public void setLang(String lang) {
        this.lang = lang;
    }

    public String getSuccesspatern() {
        return successpatern;
    }

    public void setSuccesspatern(String successpatern) {
        this.successpatern = successpatern;
    }

    public String getArgs() {
        return args;
    }

    public void setArgs(String args) {
        this.args = args;
    }
    public String genereteLaunchCommand(){
        StringBuilder sb = new StringBuilder();
        if (lang.equals("Python")){
            sb.append("python3 /exploits/");
            sb.append(getPath());
        }else{
            sb.append("./exploits/").append(getPath());
        }
        sb.append(" ").append(getArgs().replace("{IP}", getIp()).replace("{MAC}", getMac()).replace("{GW}", getGw()).replace("{MASK}", getMask()).replace("{PORT}", getPort()));
        return sb.toString();
    }

    public void setIp(String ip) {
        this.ip = ip;
    }

    public void setMac(String mac) {
        this.mac = mac;
    }

    public void setGw(String gw) {
        this.gw = gw;
    }

    public void setMask(String mask) {
        this.mask = mask;
    }

    public void setPort(String port) {
        this.port = port;
    }

    public String getIp() {
        return ip;
    }

    public String getMac() {
        return mac;
    }

    public String getGw() {
        return gw;
    }

    public String getMask() {
        return mask;
    }

    public String getPort() {
        return port;
    }
    public ArrayList<String> getRequireArgs(){
        ArrayList<String> args = new ArrayList<>();
        Matcher a = Pattern.compile("\\{[^}]*\\}").matcher(getArgs());
        while (a.find()){
            args.add(a.group().replace("{","").replace("}",""));
        }
        return  args;
    }

    public Boolean getIssystem() {
        return issystem;
    }

    public void setIssystem(Boolean issystem) {
        this.issystem = issystem;
    }
}
