package com.zalexdev.stryker.exploit_hub;


import android.annotation.SuppressLint;
import android.app.Activity;
import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.google.android.material.card.MaterialCardView;
import com.zalexdev.stryker.R;
import com.zalexdev.stryker.custom.Exploit;
import com.zalexdev.stryker.utils.Core;

import java.util.ArrayList;

public class ExploitsAdapter extends RecyclerView.Adapter<ExploitsAdapter.ViewHolder> {
    public Context context;
    public Activity activity;
    public String port;
    public ArrayList<Exploit> exploits;
    public Core core;



    public ExploitsAdapter(Context context2, Activity mActivity, ArrayList<Exploit> exp) {
        context = context2;
        activity = mActivity;
        exploits = exp;
        core = new Core(context);
    }

    @NonNull
    @Override
    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View v = LayoutInflater.from(context).inflate(R.layout.eh_item, parent, false);
        return new ViewHolder(v);
    }

    @SuppressLint({"UseCompatLoadingForDrawables", "SetTextI18n"})
    @Override
    public void onBindViewHolder(@NonNull ViewHolder adapter, @SuppressLint("RecyclerView") final int position) {
        Exploit temp = exploits.get(position);
        adapter.title.setText(temp.getTitle());
        adapter.args.setText(temp.getPath()+" "+temp.getArgs());
        adapter.edit.setVisibility(View.GONE);
        adapter.delete.setOnClickListener(view -> {
            core.deleteExploit(position);
            exploits.remove(position);
            notifyItemRemoved(position);
        });
        adapter.edit.setOnClickListener(view -> core.toaster(temp.genereteLaunchCommand()));
        if (temp.getIssystem()){

            adapter.delete.setVisibility(View.GONE);
        }
    }




    @Override
    public int getItemCount() {

        return exploits.size();
    }

    @Override
    public long getItemId(int position) {
        return position;
    }



    @Override
    public int getItemViewType(int position) {
        return position;
    }

    public void toaster(String msg) {
        activity.runOnUiThread(() -> {
            Toast toast = Toast.makeText(context,
                    msg, Toast.LENGTH_SHORT);
            toast.show();
        });

    }

    public void changeitem(int i, Exploit e) {
        activity.runOnUiThread(() -> {
            exploits.set(i, e);
            notifyItemChanged(i);
        });

    }


    public static class ViewHolder extends RecyclerView.ViewHolder {
        //Init
        public TextView title;
        public TextView args;

        public ImageView color;
        public ImageView edit;
        public ImageView delete;
        public MaterialCardView card;

        public ViewHolder(View v) {
            super(v);

            title = v.findViewById(R.id.exploit_title);
            args = v.findViewById(R.id.exploit_args);
            edit = v.findViewById(R.id.exploit_edit);
            delete = v.findViewById(R.id.exploit_delete);
            card = v.findViewById(R.id.exploit_item);
        }

    }
}
