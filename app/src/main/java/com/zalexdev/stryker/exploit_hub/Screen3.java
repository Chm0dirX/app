package com.zalexdev.stryker.exploit_hub;


import android.annotation.SuppressLint;
import android.content.Context;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentManager;
import androidx.fragment.app.FragmentTransaction;

import com.google.android.material.dialog.MaterialAlertDialogBuilder;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import com.google.android.material.textfield.TextInputEditText;
import com.zalexdev.stryker.R;
import com.zalexdev.stryker.custom.Exploit;
import com.zalexdev.stryker.exploit_hub.utils.CheckPattern;
import com.zalexdev.stryker.utils.Core;

import java.util.concurrent.ExecutionException;

public class Screen3 extends Fragment {


    public Context context;
    public Core core;
    public TextView status;
    public LinearProgressIndicator progress;
    public Exploit temp;

    public Screen3(Exploit t) {
        temp = t;
    }

    @SuppressLint("Range")
    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View viewroot = inflater.inflate(R.layout.eh_add_3, container, false);
        context = getContext();
        core = new Core(context);
        ImageView next = viewroot.findViewById(R.id.ew_next);
        TextInputEditText title = viewroot.findViewById(R.id.getname);
        TextInputEditText success_pattern = viewroot.findViewById(R.id.getsuccess);
        next.setOnClickListener(view -> {
            try {
                Boolean found = new CheckPattern(success_pattern.getText().toString(),temp.getPath()).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR).get();
                if (found){
                    temp.setTitle(title.getText().toString());
                    temp.setSuccesspatern(success_pattern.getText().toString());
                    core.saveExploit(temp);
                    FragmentManager fragmentManager = getFragmentManager();
                    fragmentManager.beginTransaction().replace(R.id.flContent, new ExploitScreen()).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN).commit();

                }else{
                    new MaterialAlertDialogBuilder(context)
                            .setTitle(core.str("warn"))
                            .setMessage(core.str("no_pattern"))
                            .setPositiveButton(core.str("yes"), (dialogInterface, i) -> {
                                    temp.setTitle(title.getText().toString());
                                    temp.setSuccesspatern(success_pattern.getText().toString());
                                    core.saveExploit(temp);
                                FragmentManager fragmentManager = getFragmentManager();
                                fragmentManager.beginTransaction().replace(R.id.flContent, new ExploitScreen()).setTransition(FragmentTransaction.TRANSIT_FRAGMENT_OPEN).commit();
                            })
                            .setNegativeButton(core.str("no"), (dialogInterface, i) -> {
                                dialogInterface.dismiss();
                            }).show();
                }
            } catch (ExecutionException | InterruptedException e) {
                e.printStackTrace();
            }
        });
        return viewroot;

    }


}